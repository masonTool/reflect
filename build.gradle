buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

group 'com.github.masontool'
version '2.2.3'

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
}

def parientName = rootProject.name
def gitUrl = "https://github.com/masonTool/$parientName"

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Mason"
            name "MaPeiyu"
            email "mason.mpy@gmail.com"
        }
    }
    scm {
        url gitUrl
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId rootProject.group
            artifactId 'reflect'
            version rootProject.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', parientName)
                root.appendNode('url', gitUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//配置上传Bintray相关信息
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publications = ['MyPublication']
    pkg {
        repo = 'maven' // 上传到中央仓库的名称
        name = parientName // 上传到jcenter 的项目名称
        desc = 'When dependencies aar has redundant resources such as .png, assets, .so  etc. Give you ability to remove it through the packaging process. ' // 项目描述
        websiteUrl = gitUrl
        issueTrackerUrl = gitUrl
        vcsUrl = gitUrl
        labels = ['jar', 'plugin']
        licenses = ['Apache-2.0']
        publish = true
    }
}

sourceCompatibility = 1.6
